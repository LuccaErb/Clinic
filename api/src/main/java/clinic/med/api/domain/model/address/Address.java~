package clinic.med.api.domain.model.address;

import clinic.med.api.domain.dto.addressDto.DataAddressDto;
import jakarta.persistence.Embeddable;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;

@Embeddable
@Getter
@NoArgsConstructor
@AllArgsConstructor
public class Address {

    private String publicPlace;
    private String neighborhood;
    private String cep;
    private String city;
    private String uf;
    private String complement;
    private String number;


    public Address(DataAddressDto address) {
        this.publicPlace = address.publicPlace();
        this.neighborhood = address.neighborhood();
        this.cep = address.cep();
        this.city = address.city();
        this.uf = address.uf();
        this.complement = address.complement();
        this.number = address.number();
    }


    public void updateDoctor(DataAddressDto address) {
        if (   address.publicPlace() != null) this.publicPlace = address.publicPlace();
        if (   address.neighborhood() != null) this.neighborhood = address.neighborhood();
        if (   address.cep() != null) this.cep = address.cep();
        if (   address.city() != null) this.city = address.city();
        if (   address.uf() != null) this.uf = address.uf();
        if (   address.complement() != null) this.complement = address.complement();
        if (   address.number() != null) this.number = address.number();
    }

    public void updateInformation(Address newAddress) {
        if (newAddress.publicPlace != null) {
            this.publicPlace = newAddress.publicPlace;
        }
        if (newAddress.neighborhood != null) {
            this.neighborhood = newAddress.neighborhood;
        }
        if (newAddress.cep != null) {
            this.cep = newAddress.cep;
        }
        if (newAddress.city != null) {
            this.city = newAddress.city;
        }
        if (newAddress.uf != null) {
            this.uf = newAddress.uf;
        }
        if (newAddress.complement != null) {
            this.complement = newAddress.complement;
        }
        if (newAddress.number != null) {
            this.number = newAddress.number;
        }
    }
}
